on: [push, pull_request]

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:
  test:
    runs-on: ubuntu-latest

    permissions:
      contents: read
      packages: write
      attestations: write
      id-token: write

    steps:
    - uses: actions/checkout@v2

    - name: Set up Python
      uses: actions/setup-python@v2
      with:
        python-version: '3.11'

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install pytest
        pip install -r requirements.txt

    - name: Run tests
      run: |
        pytest pytestt.py

    - name: Build Docker image
      run: |
        docker build -t my-resource-analyzer .

    - name: Log in to the Container registry
      uses: docker/login-action@v1
      with:
        registry: ${{ env.REGISTRY }}
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}

    - name: Extract metadata (tags, labels) for Docker
      id: meta
      uses: docker/metadata-action@v3
      with:
        images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}

    - name: Build and push Docker image
      id: push
      uses: docker/build-push-action@v3
      with:
        context: .
        push: true
        tags: ${{ steps.meta.outputs.tags }}
        labels: ${{ steps.meta.outputs.labels }}

    - name: Install cosign
      run: |
        wget https://github.com/sigstore/cosign/releases/download/v1.3.1/cosign-linux-amd64
        chmod +x cosign-linux-amd64
        mv cosign-linux-amd64 /usr/local/bin/cosign

    - name: Generate attestation details
      run: |
        echo "<attestation details>" > attestation.json

    - name: Generate artifact attestation
      run: |
        cosign attest --key ${GITHUB_WORKSPACE}/cosign.key --predicate attestation.json --type https://in-toto.io/Statement/v0.1 --digest ${{ steps.push.outputs.digest }} --output-file attestation.json
